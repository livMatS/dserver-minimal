name: generic-container-image-publication

on:
  workflow_call:
    inputs:
      image:
        description: 'Full name of container image to build, without tag'
        default: 'ghcr.io/jic-dtool/dserver-single-container'
        required: false
        type: string
      docker_file:
        description: 'Path to dockerfile within repository of calling workflow'
        default: 'docker/single-container/Dockerfile'
        required: false
        type: string
      docker_context:
        description: 'Context for building docker image'
        default: 'docker/single-container'
        required: false
        type: string
      registry:
        description: 'Registry to push docker image to'
        default: 'ghcr.io'
        required: false
        type: string
    secrets:
      REGISTRY_USERNAME:
        required: true
      REGISTRY_TOKEN:
        required: true


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@v5.7.0
      with:
        images: ${{ inputs.image }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=ref,event=branch
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up docker buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache docker layers
      uses: actions/cache@v4.2.3
      env:
        cache-name: cache-docker-layers
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ env.cache-name }}
        restore-keys: |
          ${{ runner.os }}-buildx-${{ env.cache-name }}

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.docker_context }}
        file: ${{ inputs.docker_file }}
        platforms: linux/amd64
        push: |
          ${{ (github.event_name == 'workflow_dispatch') ||
              (github.event_name == 'push' && startsWith(github.ref, 'refs/tags')) ||
              (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
              (
                github.event_name == 'pull_request' && 
                github.event.action == 'closed' && 
                github.event.pull_request.base.ref == 'main' && 
                github.event.pull_request.merged == true
              ) }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        # This ugly bit is necessary if you don't want your cache to grow forever
        # till it hits GitHub's limit of 5GB.
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
