volumes:
  postgres_data: {}
  mongo_data: {}
  key_data: {}

services:
  dserver:
    build:
      context: ..
      dockerfile: ./docker/dserver_devel/Dockerfile
    image: local_dserver
    hostname: dserver
    depends_on:
      postgres:
        condition: service_started
      mongo:
        condition: service_started
    volumes:
      - ..:/app
      - key_data:/keys
    environment:
      - SQLALCHEMY_DATABASE_URI=postgresql://admin:secret12@postgres:5432/dtool
      - SEARCH_MONGO_URI=mongodb://mongo:27017/
      - SEARCH_MONGO_DB=dtool_info
      - SEARCH_MONGO_COLLECTION=datasets
      - RETRIEVE_MONGO_URI=mongodb://mongo:27017/
      - RETRIEVE_MONGO_DB=dtool_info
      - RETRIEVE_MONGO_COLLECTION=datasets
      - MONGO_URI=mongodb://mongo:27017/
      - MONGO_DB=dtool_info
      - MONGO_COLLECTION=metadata
      - JWT_PUBLIC_KEY_FILE=/keys/jwt_key.pub
      - JWT_PRIVATE_KEY_FILE=/keys/jwt_key
      - DISABLE_JWT_AUTHORISATION=True
      - DEFAULT_USER=test-user
      - DUMP_HTTP_REQUESTS=True
      - LOGLEVEL=DEBUG
    ports:
      - "5000:5000"

  postgres:
    image: postgres:latest
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PORT=5432
      - POSTGRES_DB=dtool
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret12
    ports:
      - "5432:5432"

  mongo:
    image: mongo:latest
    restart: always
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_DATA_DIR=/data/db
    ports:
      - "27017:27017"

  dtool_lookup_webapp:
    hostname: dtool-lookup-webapp
    build:
      context: .
      dockerfile: ./compose/dtool_lookup_webapp/Dockerfile
    image: jotelha/dtool-lookup-webapp
    restart: always
    volumes:
      - type: bind
        source: ./volumes/webapp/dtool-templates
        target: /app/dtool-lookup-webapp/public/data/templates
        read_only: true  
    env_file:
      - ./envs/dtool_lookup_webapp
    ports:
      - "8080:8080"